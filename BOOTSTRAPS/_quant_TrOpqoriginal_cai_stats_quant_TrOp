[1;31mSignature: [0m[0ma[0m[1;33m.[0m[0mbar[0m[1;33m([0m[0mleft[0m[1;33m,[0m [0mheight[0m[1;33m,[0m [0mwidth[0m[1;33m=[0m[1;36m0.8[0m[1;33m,[0m [0mbottom[0m[1;33m=[0m[0mNone[0m[1;33m,[0m [1;33m**[0m[0mkwargs[0m[1;33m)[0m[1;33m[0m[0m
[1;31mDocstring:[0m
Make a bar plot.

Make a bar plot with rectangles bounded by:

  `left`, `left` + `width`, `bottom`, `bottom` + `height`
        (left, right, bottom and top edges)

Parameters
----------
left : sequence of scalars
    the x coordinates of the left sides of the bars

height : sequence of scalars
    the heights of the bars

width : scalar or array-like, optional, default: 0.8
    the width(s) of the bars

bottom : scalar or array-like, optional, default: None
    the y coordinate(s) of the bars

color : scalar or array-like, optional
    the colors of the bar faces

edgecolor : scalar or array-like, optional
    the colors of the bar edges

linewidth : scalar or array-like, optional, default: None
    width of bar edge(s). If None, use default
    linewidth; If 0, don't draw edges.

xerr : scalar or array-like, optional, default: None
    if not None, will be used to generate errorbar(s) on the bar chart

yerr : scalar or array-like, optional, default: None
    if not None, will be used to generate errorbar(s) on the bar chart

ecolor : scalar or array-like, optional, default: None
    specifies the color of errorbar(s)

capsize : integer, optional, default: 3
   determines the length in points of the error bar caps

error_kw :
    dictionary of kwargs to be passed to errorbar method. *ecolor* and
    *capsize* may be specified here rather than as independent kwargs.

align : ['edge' | 'center'], optional, default: 'edge'
    If `edge`, aligns bars by their left edges (for vertical bars) and
    by their bottom edges (for horizontal bars). If `center`, interpret
    the `left` argument as the coordinates of the centers of the bars.

orientation : 'vertical' | 'horizontal', optional, default: 'vertical'
    The orientation of the bars.

log : boolean, optional, default: False
    If true, sets the axis to be log scale

Returns
-------
`matplotlib.patches.Rectangle` instances.

Notes
-----
The optional arguments `color`, `edgecolor`, `linewidth`,
`xerr`, and `yerr` can be either scalars or sequences of
length equal to the number of bars.  This enables you to use
bar as the basis for stacked bar charts, or candlestick plots.
Detail: `xerr` and `yerr` are passed directly to
:meth:`errorbar`, so they can also have shape 2xN for
independent specification of lower and upper errors.

Other optional kwargs:

  agg_filter: unknown
  alpha: float or None         
  animated: [True | False]         
  antialiased or aa: [True | False]  or None for default         
  axes: an :class:`~matplotlib.axes.Axes` instance         
  capstyle: ['butt' | 'round' | 'projecting']         
  clip_box: a :class:`matplotlib.transforms.Bbox` instance         
  clip_on: [True | False]         
  clip_path: [ (:class:`~matplotlib.path.Path`,         :class:`~matplotlib.transforms.Transform`) |         :class:`~matplotlib.patches.Patch` | None ]         
  color: matplotlib color spec
  contains: a callable function         
  edgecolor or ec: mpl color spec, or None for default, or 'none' for no color         
  facecolor or fc: mpl color spec, or None for default, or 'none' for no color         
  figure: a :class:`matplotlib.figure.Figure` instance         
  fill: [True | False]         
  gid: an id string         
  hatch: ['/' | '\\' | '|' | '-' | '+' | 'x' | 'o' | 'O' | '.' | '*']         
  joinstyle: ['miter' | 'round' | 'bevel']         
  label: string or anything printable with '%s' conversion.         
  linestyle or ls: ['solid' | 'dashed' | 'dashdot' | 'dotted']         
  linewidth or lw: float or None for default         
  lod: [True | False]         
  path_effects: unknown
  picker: [None|float|boolean|callable]         
  rasterized: [True | False | None]         
  sketch_params: unknown
  snap: unknown
  transform: :class:`~matplotlib.transforms.Transform` instance         
  url: a url string         
  visible: [True | False]         
  zorder: any number         

See also
--------
barh: Plot a horizontal bar plot.

Examples
--------

**Example:** A stacked bar chart.

.. plot:: mpl_examples/pylab_examples/bar_stacked.py
[1;31mFile:      [0m~/local/lib/python2.7/site-packages/matplotlib-1.4.3-py2.7-linux-x86_64.egg/matplotlib/axes/_axes.py
[1;31mType:      [0minstancemethod